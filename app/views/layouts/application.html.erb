<!DOCTYPE html>
<html>
<head>
  <title><%= full_title(yield(:page_title)) %></title>
  <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track' => true %>

  <!--Twitter Bootstrap -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
  <link href="/assets/sticky-footer.css" rel="stylesheet">
  <script src="https://use.fontawesome.com/dd1fae6742.js"></script>
  <!-- Bootstrap Toggle Button -->
  <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">

  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
</head>
<body>

<nav id="mainMenu">
  <ul class="nav nav-pills">

    <!-- Home -->
    <li role="presentation" class="">
      <%= link_to 'Home', slots_path %>
    </li>

    <!-- Videos -->
    <li role="presentation" class="" style="text-align: right;">
      <% if is_admin_view? %>
        <%= link_to 'Queue', videos_path %>
      <% else %>
        <%= link_to 'My Videos', my_videos_path %>
      <% end %>
    </li>


    <!-- Sign Out -->
    <!-- Profile -->
    <% if current_user %>
    <li role="presentation" class="" style="float: right;">
      <%= link_to '/profile', {:style => 'padding: 0; margin-left: 5px; cursor: pointer;'} do %>
      <div class="avatar-circle-xs" style="margin-top: 4px;">
       <span class="initials">
         <%= current_user.name[0..1].upcase %>
       </span>
      </div>
      <% end %>
    </li>
    <% end %>

    <% unless current_page? root_url %>
        <li role="presentation" class="" style="float: right; padding-top: 5px">
          <fb:login-button onlogin="checkLoginState();" data-size="medium" data-auto-logout-link="true">
          </fb:login-button>
        </li>
    <% end %>

    <!-- User/Admin Toggle -->
    <% if is_admin_user? %>
        <li role="presentation" class="" style="float: right; padding-top: 5px; padding-right: 5px;">
          <input type="checkbox" <%= is_admin_view? ? 'checked' : '' %> id="toggle-event" data-toggle="toggle" data-size="mini" data-on="Admin" data-off="User">
        </li>

        <!--<li role="presentation" class="" style="float: right;"><%= link_to '', current_user, class: 'glyphicon glyphicon-user' %> </li>-->
        <!--<li role="presentation" class="" style="float: right;"><%= link_to current_user.name, current_user %> </li>-->
    <% end %>
  </ul>
</nav>
<hr style="margin-top: 0;">

<%= yield %>

<hr style="margin-top: 100px;">
<!--<%= debug(params) if Rails.env.development? %>-->
<!-- Twitter Bootstrap -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>

<script>
  // ======= Toggle Admin =======
  $(function() {
    $('#toggle-event').change(function() {
      $.post("/users/toggle_admin", {is_admin: $(this).prop('checked')});
    })
  })

  // ======= Facebook Login =======
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      localStorage.setItem('accessToken', response.authResponse.accessToken);
      doLogin();
    }
    else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
    }
    else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
//      if (window.location.pathname != "/") {
//        window.location.pathname = "/";
//      }
      doLogout();
    }
  }

//  function facebook_login() {
//    window.location.pathname = "/";
//  }

  // (1) posts logout request to backend to nullify user session data
  // (2) redirects user to home poge
  function doLogout() {
    $.post("/users/logged_out_fb");
    if (window.location.pathname != "/") {
      window.location.pathname = "/logout";
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function (response) {
      console.log(JSON.stringify(response));
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function () {
    FB.init({
      appId: '1812832325605603',
      cookie: true, // enable cookies to allow the server to access
      // the session
      xfbml: true, // parse social plugins on this page
      version: 'v2.6', // use graph api version 2.5
      scope: 'email'
    });

    // Now that we've initialized the JavaScript SDK, we call
    // FB.getLoginStatus().  This function gets the state of the
    // person visiting this page and can return one of three states to
    // the callback you provide.  They can be:
    //
    // 1. Logged into your app ('connected')
    // 2. Logged into Facebook, but not your app ('not_authorized')
    // 3. Not logged into Facebook and can't tell if they are logged into
    //    your app or not.
    //
    // These three cases are handled in the callback function.

    FB.getLoginStatus(function (response) {
      statusChangeCallback(response);
    });

    FB.Event.subscribe("auth.logout", function () {
//      $.post("/users/logged_out_fb");
      window.location = '/logout';
    });

  };

  // Load the SDK asynchronously
  (function (d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s);
    js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function doLogin() {
//    FB.api('/me', {fields: 'name, email'}, function (response) {
//    });
  }
</script>

<footer class="footer">
    <div class="container">
        <p class="text-muted">&copy; I Got Talent 2017</p>
    </div>
</footer>
    
</body>
</html>
